/**
 *1. khai bao bien
 */
const PI = 3.14;

//kh√¥ng ƒë·∫∑t tr√πng t√™n
//const PI = 3.13213213;
//kh√¥ng g√°n l·∫°i
//console.log(PI)

var age = 19;
//cho ph√©p tr√πng (nh∆∞·ª£c ƒëi·ªÉm)
//var age = 20;
//cho ph√©p g√°n l·∫°i gi√° tr·ªã

console.log(age);


let newAge = 30;
//kh√¥ng cho ph√©p ƒë·∫∑t tr√πng t√™n
//let newAge=40;
newAge = 50;
console.log(newAge);




/** scope variable */
// global & local

//global : bi·∫øn to√†n c·ª•c (bi·∫øn khai b√°o ngo√†i h√†m), d√πng b·∫•t k·ª≥ m·ªçi n∆°i trong web
var ten = "PhuCT dau file";

//ES5 : 
//function scope (local)
function tinhCanNang() {
    var weight = 100;
    console.log(weight);
    console.log(ten);
    if (weight >= 100) {
        var tuoi = 20;
        console.log("can nang: " + weight);
    }

    console.log("tuoi cua ban: " + tuoi)
}
tinhCanNang();

//sai pham vi
//console.log("ngoai ham" + ten);


//ES6
function tinhCanNang2() {
    console.log("thong bao ham can nang 2")
    let weight = 100;
    console.log(weight);
    console.log(ten);
    if (weight >= 100) {
        //block scope
        //neu let khai b√°o trong if, loop (v√≤ng l·∫∑p) th√¨ ch·ªâ dc s·ª≠ d·ª•ng trong l·ªánh if , loop
        let tuoi = 20;
        console.log("can nang: " + weight);
        console.log("tuoi cua ban: " + tuoi)
    }

    // console.log("tuoi cua ban: " + tuoi)
}
tinhCanNang2();


/*******   Hoisting********** */
//tr√¨nh duy·ªát s·∫Ω t·ª± di chuy·ªÉn d√≤ng khai b√°o bi·∫øn(var city) l√™n v·ªã tr√≠ ƒë·∫ßu file code
//c√≤n d√≤ng g√°n gi√° tr·ªã v·∫´n ·ªü v·ªã tr√≠ code c≈© (city = "Ho Chi Minh");

//es5 
//undefined & null l√† 1 ki·ªÉu gi√° tr·ªã trong JS

//Cach 1:
//b·ªã ·∫£nh h∆∞·ªüng hoisting
// console.log(city);  //undefined
// var city = "Ho Chi Minh";


//Cach 2:
// var city;
// console.log(city);    //undefined
// city = "Ho Chi Minh";


//do ·∫£nh h∆∞·ªüng c·ªßa hoisting n√™n d√≤ng khai b√°o h√†m s·∫Ω di chuy·ªÉn l√™n ƒë·∫ßu file
// => gi√∫p g·ªçi h√†m ·ªü b·∫•t k·ª≥ v·ªã tr√≠ n√†o c≈©ng dc
// => nh∆∞·ª£c ƒëi·ªÉm: kh√≥ qu·∫£n l√Ω code

// hienThanhPho();
// function hienThanhPho(){
//     // console.log(city);

// }
// hienThanhPho();



//es6:lo·∫°i b·ªè hoisting
// console.log(city2); //th√¥ng b√°o r√µ l√Ω do l·ªói (bi·∫øn ch∆∞a dc t·∫°o)
//demoES6.js:105 Uncaught ReferenceError: Cannot access 'city2' before initialization
let city2 = "Ha Noi";

let city3;
console.log(city3); //undefined (l·ªói khi kh√¥ng g√°n gi√° tr·ªã)
city3 = "Ha Noi3";




/**
 *  2. Arrow Function*/
// 2 c√°ch khai b√°o h√†m c·ªßa ES5: 

/**C√°ch 1:
 * declarations function (khai b√°o b·∫±ng t·ª´ kh√≥a function)
 */
let fullName = "PhuCT"
function hello() {
    console.log("Nguoi tiep theo " + fullName);
}
hello();


/**
 * C√°ch 2: expressions
 */
let newHello = function () {
    console.log("newHello")
    console.log("Nguoi tiep theo " + fullName)
}
newHello();


//ES6
let newHello2 = () => {
    console.log("newHello2")
    console.log("Nguoi tiep theo " + fullName)
}
newHello2();


//truy·ªÅn tham s·ªë
let newHello3 = (name) => {
    console.log("newHello3")
    console.log("Nguoi tiep theo " + name)
}
newHello3("Tran Bao Ve");


//r√∫t g·ªçn 1: n·∫øu ch·ªâ c√≥ 1 tham s·ªë th√¨ c√≥ th·ªÉ b·ªè d·∫•u ()  =>(name)
let newHello4 = name => {
    console.log("newHello4")
    console.log("Nguoi tiep theo " + name)
}
newHello4("Tran Thi Lao Cong");

//rut g·ªçn 2:
let newHello5 = name => {
    // console.log("newHello5")
    return "Nguoi tiep theo " + name;
}
console.log(newHello5("nguyen thi giao vien"));

//n·∫øu ch·ªâ c√≥ 1 l·ªánh return th√¨ b·ªè d·∫•u {} & l·ªánh "return"
// let newHello5 = name => "nguoi tiep theo" +name;
// console.log(newHello5("nguyen thi giao vien"));





/**
 * L·ªói c√∫ ph√°p
 */
let newHello6 = () => {
    console.log("nguoi tiep theo " + fullName);
}
newHello6();


//k√Ω hi·ªáu "=>" ph·∫£i n·∫±m chung d√≤ng v·ªõi khai b√°o h√†m
// let newHello6 = ()            Uncaught SyntaxError: Unexpected token '=>' 
// =>
// {
//     console.log("nguoi tiep theo " + fullName);
// }
// newHello6();



/** ******** ng·ªØ c·∫£nh(context) c·ªßa con tr·ªè this******** */
let hocVien = {
    ten: "PhuCT",
    lop: "BC07",
    layThongTin: function () {
        //this ƒë·∫°i di·ªán cho function ƒëang ch·ª©a n√≥
        //layThongTin ƒë∆∞·ª£c tham chi·∫øu t·ª´ ƒë·ªëi t∆∞·ª£ng hocVien
        //=> this l√† ƒë·ªëi t∆∞·ª£ng hocVien
        console.log("ten hoc vien: " + this.ten);
        console.log("lop: " + this.lop)
    }
}
hocVien.layThongTin();



let hocVien2 = {
    ten: "PhuCT2",
    lop: "BC07",
    danhSachDiem: [9, 7, 8],
    layThongTin: function () {
        /**this.danhSachDiem : => hocVien2 */
        /** closure function : function ƒë∆∞∆°c kh·ªüi t·∫°o trong function kh√°c */
        // /** call back function : function nh·∫≠n tham s·ªë t·ª´ function kh√°c */=> c√°i n√†y nh·∫Øc b√†i c≈© ( th·ª±c t·∫ø h√†m d∆∞·ªõi l√† closure func)
        this.danhSachDiem.map(function (diem) {
            /**this l√† function(diem)(function ·∫©n danh) n√≥ tr·ª±c thu·ªôc c·ªßa window */
            console.log("ten hoc vien: " + this.ten + " lop: " + this.lop + " c√≥ ƒëi·ªÉm: " + diem);
            console.log("lop: " + this.lop)
        });




    }
}
hocVien2.layThongTin();

//s·ª≠a b·∫±ng c√°ch c·ªßa ES5 :
//c√°ch 1: t·∫°o bi·∫øn t·∫°m _bind
let hocVien3 = {
    ten: "PhuCT3",
    lop: "BC07",
    danhSachDiem: [9, 7, 8],
    layThongTin: function () {
        let _bind = this;

        this.danhSachDiem.map(function (diem) {

            console.log("ten hoc vien: " + _bind.ten + " lop: " + _bind.lop + " c√≥ ƒëi·ªÉm: " + diem);
            // console.log("lop: " + this.lop)
        });
    }
}
hocVien3.layThongTin();


//c√°ch 2: d√πng h√†m bind();
let hocVien4 = {
    ten: "PhuCT4",
    lop: "BC07",
    danhSachDiem: [9, 7, 8],
    layThongTin: function () {

        this.danhSachDiem.map(function (diem) {

            console.log("ten hoc vien: " + this.ten + " lop: " + this.lop + " c√≥ ƒëi·ªÉm: " + diem);
            // console.log("lop: " + this.lop)
        }.bind(this));
    }
}
hocVien4.layThongTin();


//s·ª≠a b·∫±ng ES6:
let hocVien5 = {
    ten: "PhuCT5",
    lop: "BC07",
    danhSachDiem: [9, 7, 8],
    //ph∆∞∆°ng th·ª©c
    //arrow func ko d√πng cho ph∆∞∆°ng th·ª©c
    layThongTin: function () {

        this.danhSachDiem.map((diem) => {
            // arrow func k c√≥ ng·ªØ c·∫£nh, n√™n khoogn thay ƒë·ªïi this
            console.log("ten hoc vien5: " + this.ten + " lop: " + this.lop + " c√≥ ƒëi·ªÉm: " + diem);
        });
    },
}
hocVien5.layThongTin();




/**
 * 3. default parameter
 */

let hienThongTin = (fullName = "PhuCT (Default Parameter)", age = 27) => {
    console.log("t√™n: " + fullName + "\ntu·ªïi: " + age)
}
hienThongTin();
// => n·∫øu ko truy·ªÅn gi√° tr·ªã v√†o () th√¨ n√≥ t·ª± l·∫•y gi√° tr·ªã m·∫∑c ƒë·ªãnh (d√≤ng 294), n·∫øu 294 ko c√≥ th√¨ truy·ªÅn gi√° tr·ªã undefined
hienThongTin("truyen tham so", 12);



/**
 * 4. Rest para
 * chuy·ªÉn t·ª´ng gi√° tr·ªã th√†nh m·∫£ng
 */

//d√πng do tr∆∞·ªùng h·ª£p ko biet ch√≠nh x√°c s·ªë l∆∞·ª£ng tham s·ªë v√†o th√¨ g√µ ...
let theZoo = (...animals) => {
    animals.map((animal) => {
        console.log(animal);
    });
}
theZoo('üê∂', 'üê©', 'üê∫', 'üê±', 'üêó');




/**
 * 5. speard Parameter
 * chuy·ªÉn m·∫£ng th√†nh t·ª´ng ph·∫ßn t·ª≠ (ng∆∞·ª£c v·ªõi rest)
 */

/**
 * tham tr·ªã ( truy·ªÅn gi√° tr·ªã)
 * number
 * string
 * boolean
 * 
 * Tham chi·∫øu:(truy·ªÅn ƒë·ªãa ch·ªâ c·ªßa √¥ nh·ªõ)
 * m·∫£ng
 * object
 * function
 */
// let khoHCM = ["Iphone","SamSung","Xiaomi"];
// let khoHN = khoHCM;   => x√†i ki·ªÉu n√†y th√¨ push 1 sp cho HN th√¨ HCM c≈©ng c√≥

let khoHCM = ["Iphone", "SamSung", "Xiaomi"];
//...khoHCM l·∫•y t·ª´ng ph·∫ßn t·ª≠ c·ªßa khoHCM v√† push v√†o kho HN
let khoHN = [...khoHCM];

khoHN.push("Vsmart");

console.log("khoHCM")
console.table(khoHCM);
console.log("khoHN")
console.table(khoHN);



let hv1 = {
    fullName: "hv",
    age: 18,
}
// let hv2 = {
//     fullName: "hv",
//     age: 18,
//     gender :"M",
// }

let hv2 = {
    ...hv1,
    gender :"M",
}
console.table(hv1);
console.table(hv2);


/**
 * 6.Destructuring
 * truy xu·∫•t thu·ªôc t√≠nh
 */
let pet = {
    nickName: "hoang thuong",
    age1: 1,

}

//es5
// let nickName = pet.nickName;
// console.log(nickName);

let{nickName,age1} = pet;
console.log(nickName,age);

let{nickName: n,age1: a} = pet;
console.log(n,a);

/**
 * Object Literal
 * t√πy ch·ªânh t√™n thu·ªôc t√≠nh
 */
let nickName2 = "B√© Na";
// let pet2 = {
//     nickName : nickName2,

// }

//n·∫øu t√™n thu·ªôc t√≠nh tr√πng t√™n tham s·ªë th√¨  kh·ªèi c·∫ßn khai b√°o g√°n gi√° tr·ªã
let pet2 = {
    nickName2,
}
let {nickName2: n2} = pet2;
console.log(n2);


//t√πy ch·ªânh t√™n thu·ªôc t√≠nh
let tenThuocTinh = "fullname";
let pet3 = {
    [tenThuocTinh]:"pet 3",
}
let {fullname: full} = pet3;
console.log(full);


/**
 * For in, for of
 */
let phone = ["Iphone","SamSung","Xiaomi"];
// for (let i = 0; i<phone,length; i++){

// }

for (let index in phone){
    //duy·ªát theo index
    console.log(phone[index]);
}

// l·∫•y gi√° tr·ªã th√¥i th√¨ d√πng for of
for (let value of phone){
    //duy·ªát theo index
    console.log(value);
}

let dsPhone = phone.forEach((value,index)=>{
    //ko return dc m·∫£ng
    return value;
});
console.log(dsPhone);

let dsPhone2 = phone.map((value,index)=>{
    //return dc m·∫£ng
    //l·ªánh return trong map k c√≥ t√°c d·ª•ng d·ª´ng h√†m
    return value;
});
console.log(dsPhone2);